# .mega-linter.yml

APPLY_FIXES:  # Enable auto-fixes for safe linters
  - PYTHON_BLACK
  - PYTHON_ISORT
  - YAML_PRETTIER

#ENABLE: # Use DISABLE and selectively ENABLE, see below
DISABLE:
  - ALL  # Disable everything by default, then selectively enable
#Core Functionality
ENABLE:
  - PYTHON
  - YAML
  - INI # Needed for config.ini

#Optional Functionality -- Review before enabling
#  - MARKDOWN # if you have markdown documentation

# Security Linting (Critical)
ENABLE_LINTERS:
  - PYTHON_BANDIT       # Security vulnerability scanner for Python
  - REPOSITORY_TRUFFLEHOG # High signal secrets scanner
#  - REPOSITORY_SEMGREP   # Pattern-based security scanner (requires configuration) - Enable once configured

# Python Linters - Style and Quality
ENABLE_LINTERS:
  - PYTHON_FLAKE8  # Style and error checker
  - PYTHON_BLACK  # Automatic code formatter (opinionated)
  - PYTHON_ISORT   # Import sorting
#  - PYTHON_MYPY    # Static type checker (requires type hints) - Consider enabling if you add type hints
#  - PYTHON_PYLINT  # More comprehensive linter (can be noisy)

# YAML Linters
ENABLE_LINTERS:
  - YAML_YAMLLINT # YAML Linter
  - YAML_PRETTIER # YAML Formatter

# INI Linter (for config.ini)
ENABLE_LINTERS:
  - INI_CFGPARSE

FILTER_REGEX_EXCLUDE: |
  (
    \.automation/test|
    \.automation/generated|
    \.venv|
    \.github/workflows|
    __pycache__|
    build|
    dist|
    \.mypy_cache|
    \.pytest_cache|
    htmlcov
  )

PYTHON_FLAKE8_ARGUMENTS: "--max-line-length=120 --ignore=E203,W503"
PYTHON_BLACK_LINE_LENGTH: 120 # Ensure flake8, black, and isort stay in sync!
PYTHON_ISORT_ARGS: "--profile black" #Ensure flake8, black, and isort stay in sync!
INI_CFGPARSE_ARGUMENTS: "--no-duplicate-sections" #Example to help manage config.ini

# Specific Exclusions (adjust paths as needed)
# For example, if you have automatically generated UI code:
# PYTHON_FLAKE8_FILTER_REGEX_EXCLUDE: (path/to/generated_file\.py)

# GitHub Feedback Mechanisms (The "fun stuff")
GITHUB_STATUS_REPORTER: true  # Enable status checks on pull requests
GITHUB_PR_COMMENT_REPORTER: true # Enable comments on pull requests. Use review reporter instead.
GITHUB_PR_REVIEW_REPORTER: true # Use the review reporter if you want a pull request review instead of comments

# Reporter settings (adjust as needed)
FILEIO_REPORTER: false  # Usually disabled in CI/CD
JSON_REPORTER: true  # Keep this for generating a JSON report (useful for other tools)
